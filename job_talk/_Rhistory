install.packages("gganimate")
install_github("dgrtwo/gganimate")
library(devtools)
install_github("dgrtwo/gganimate")
install.packages("magick")
library("magick", lib.loc="~/R/win-library/3.3")
detach("package:magick", unload=TRUE)
library("magick", lib.loc="~/R/win-library/3.3")
str(magick::magick_config())
tiger <- image_read('http://jeroen.github.io/images/tiger.svg')
tiger
image_info(tiger)
frink <- image_read("https://jeroen.github.io/images/frink.png")
print(frink)
image_border(frink, "red", "20x10")
print(frink)
image_border(frink, "red", "20x10")
image_trim(frink)
image_crop(frink, "100x150+50")
image_scale(frink, "300") # width: 300px
image_scale(frink, "x300") # height: 300px
image_rotate(frink, 45)
image_flip(frink)
image_flop(frink)
image_background(frink, "pink", flatten = TRUE)
image_fill(frink, "orange", point = "+100+200", fuzz = 30000)
print(frink)
image_fill(frink, "orange", point = "+100+200", fuzz = 30000)
image_blur(frink, 10, 5)
image_noise(frink)
image_frame(frink, "25x25+10+10")
image_charcoal(frink)
image_oilpaint(frink)
image_negate(frink)
image_annotate(frink, "I like R!", size = 70, gravity = "southwest", color = "green")
image_annotate(frink, "CONFIDENTIAL", size = 30, color = "red", boxcolor = "pink",
degrees = 60, location = "+50+100")
try(image_annotate(frink, "The quick brown fox", font = 'times-new-roman', size = 30), silent = T)
frink <- image_read("https://jeroen.github.io/images/frink.png")
frink2 <- image_scale(frink, "100")
image_info(frink)
image_info(frink2)
print(frink2)
test <- image_rotate(frink, 90)
test <- image_background(test, "blue", flatten = TRUE)
test <- image_border(test, "red", "10x10")
test <- image_annotate(test, "This is how we combine transformations", color = "white", size = 30)
print(test)
library(tidyverse)
image_read("https://jeroen.github.io/images/frink.png") %>%
image_rotate(270) %>%
image_background("blue", flatten = TRUE) %>%
image_border("red", "10x10") %>%
image_annotate("The same thing with pipes", color = "white", size = 30)
earth <- image_read("https://jeroen.github.io/images/earth.gif")
earth
earth <- image_scale(earth, "200")
length(earth)
head(image_info(earth))
print(earth)
rev(earth) %>%
image_flip() %>%
image_annotate("meanwhile in Australia", size = 20, color = "white")
bigdata <- image_read('https://jeroen.github.io/images/bigdata.jpg')
frink <- image_read("https://jeroen.github.io/images/frink.png")
logo <- image_read("https://www.r-project.org/logo/Rlogo.png")
img <- c(bigdata, logo, frink)
img <- image_scale(img, "300x300")
image_info(img)
image_mosaic(img)
image_flatten(img)
image_flatten(img, 'Add')
image_animate(image_scale(img, "200x200"), fps = 1, dispose = "previous")
newlogo <- image_scale(image_read("https://www.r-project.org/logo/Rlogo.png"), "x150")
oldlogo <- image_scale(image_read("https://developer.r-project.org/Logo/Rlogo-3.png"), "x150")
frames <- image_morph(c(oldlogo, newlogo), frames = 10)
image_animate(frames)
print(newlogo)
print(oldlogo)
image_animate(frames)
banana <- image_read("https://jeroen.github.io/images/banana.gif")
banana <- image_scale(banana, "150")
image_info(banana)
print(banana)
background <- image_background(image_scale(logo, "200"), "white", flatten = TRUE)
print(background)
frames <- lapply(banana, function(frame) {
image_composite(background, frame, offset = "+70+30")
})
print(frames)
animation <- image_animate(image_join(frames))
print(animation)
plot(cars)
rasterImage(frink, 21, 0, 25, 80)
library(grid)
qplot(speed, dist, data = cars, geom = c("point", "smooth"))
grid.raster(frink)
library(ggplot2)
library(gganimate)
library(gapminder)
install.packages("gapminder")
options(download.file.method="libcurl")
install.packages("gapminder")
library(gapminder)
devtools::install_github("jennybc/gapminder")
library(gapminder)
library(gapminder)
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent, frame = year)) +
geom_point() +
scale_x_log10()
p
gg_animate(p)
library(gganimate)
gg_animate(p)
gganimate(p)
gganimate(p)
gganimate(p)
library(ggplot2)
library(gganimate)
library(gapminder)
theme_set(theme_bw())
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent, frame = year)) +
geom_point() +
scale_x_log10()
gg_animate(p)
gganimate(p)
gganimate(p, "output.gif")
temp <- image_read("C:\Users\mkissel\Documents\output.gif")
temp <- image_read("output.gif")
library(magick)
temp <- image_read("C:\Users\mkissel\Documents\output.gif")
temp <- image_read("output.gif")
temp
image_info(temp)
print(temp)
print(temp)
gganimate(temp, interval = .2)
gganimate(p)
gganimate(p, interval = .2)
getwd()
blogdown::hugo_version()
blogdown::install_hugo()
blogdown::install_theme()
library(blogdown)
install.packages("blogdown")
blogdown::install_hugo()
blogdown::new_site()
install.packages("flexdashboard")
library(rworldmap)
install.packages("rworldmap")
library(rworldmap)
vignette('rworldmap')
map <- getMap()
plot(map)
plot(map)
par(mar=c(1,1,1,1))
plot(map)
library(wbstats)
install.packages('wbstats')
library(wbstats)
indicators <- wbsearch(pattern = "pollution")
print(indicators)
d <- wb(indicator = "EN.ATM.PM25.MC.M3", startdate = 2016, enddate = 2016)
print(head(d))
map$PM2.5 <- d[match(map$ISO3, d$iso3), "value"]
print(head(map@data))
library(DT)
DT::datatable(map@data[, c("ISO3", "NAME", "PM2.5")],
rownames = FALSE, options = list(pageLength = 10))
library(leaflet)
pal <- colorBin(palette = "viridis", domain = map$PM2.5,
bins = c(0, 10, 20, 30, 40, 50, 100, 200, ceiling(max(map$PM2.5, na.rm = TRUE))))
map$labels <- paste0("<strong> Country: </strong> ", map$NAME, "<br/> ",
"<strong> PM2.5: </strong> ", map$PM2.5, "<br/> ") %>%
lapply(htmltools::HTML)
leaflet(map) %>% addTiles() %>%
setView(lng = 0, lat = 30, zoom = 2) %>%
addPolygons(
fillColor = ~pal(PM2.5),
color = "white",
fillOpacity = 0.7,
label = ~labels,
highlight = highlightOptions(color = "black", bringToFront = TRUE)) %>%
leaflet::addLegend(pal = pal, values = ~PM2.5, opacity = 0.7, title = "PM2.5")
library(ggplot2)
ggplot(data = map@data, aes(x = PM2.5)) + geom_histogram()
require(rWBclimate)
devtools::install("rWBclimate")
library(devtools)
install_github("vincentarelbundock/WDI")
require(rWBclimate)
install_github("ropensci/rWBclimate")
require(rWBclimate)
country.list <- c("USA", "MEX", "CAN", "BLZ")
country.dat <- get_historical_temp(country.list, "year")
country.dat
View(country.dat)
getwd()
getwd()
setwd("~/Code/R_projects/job_talk")
count_sites <- c(9, 8, 9, 14, 45)
time_period <- c("+400 kya", "300-399 kya", "200-299 kya", "100-199 kya", "45-99 kya")
library(tidyverse)
temp <- cbind(time_period, count_sites)
temp
temp <- as.tibble(temp)
temp
temp %>% as.numeric(count_sites)
temp %>% as.integer(count_sites)
DCI <- read_csv("X_Factor_Dataset.csv")
DCI_interact <-  DCI %>% gather(value = X, key = country, Belgium:Iraq)
DCI_summary <- DCI_interact %>% group_by(country) %>% summarise(DCI_mean = mean(X, na.rm = TRUE), DCI_sd = sd(X, na.rm = TRUE))
DCI_motion <-ggplot(DCI_interact, aes(x= Year, y = X, group =country, frame = Year, color = country, label=country, size = X)) + geom_point() + geom_label(aes(Year, X, label=country))
p <- ggplotly(DCI_motion, height = 600, width = 800)
library(tidyverse)
library(plotly)
p <- ggplotly(DCI_motion, height = 600, width = 800)
p %>% animation_opts(frame =100)
p %>% animation_opts(frame =10000)
DCI_motion %>% animation::
#ggplotly(DCI_motion, height = 600, width = 800)
library(gapminder)
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
p <- ggplotly(p)
p
q <- p %>% animation_opts(1000)
q
p <- ggplotly(DCI_motion, height = 600, width = 800)
?animation_opts
p %>% animation_opts(100)
p %>% animation_opts(100, redraw = F)
q <- r %>% animation_opts(1000, redraw = F)
r <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
r <- ggplotly(r)
q <- r %>% animation_opts(1000, redraw = F)
q
p %>% animation_opts(300, redraw = F)
p <- ggplotly(DCI_motion, height = 600, width = 800)
q <- ggplotly(DCI_motion, height = 600, width = 800) %>% animation_opts(300, redraw = F)
r <- ggplotly(DCI_motion, height = 600, width = 800) %>% animation_opts(100, redraw = F)
r
q
